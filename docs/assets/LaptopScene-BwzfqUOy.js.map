{"version":3,"file":"LaptopScene-BwzfqUOy.js","sources":["../../homepage/LaptopScene.jsx"],"sourcesContent":["import { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\nimport { useGLTF, Text, Html, Float } from \"@react-three/drei\";\r\nimport ToggleFocusButton from \"../utils/ToggleFocusButton.jsx\";\r\nimport { useThree } from \"@react-three/fiber\";\r\nimport gsap from \"gsap\";\r\n\r\n/**\r\n * Contains the Laptop scene used in the homepage.\r\n * @param {Function} onLoad - Called by LaptopScene the first time it loads\r\n * @param {React.Ref} ref - The ref to be forwarded.\r\n * @returns {JSX.Element} Laptop scene component.\r\n */\r\nconst LaptopScene = forwardRef(({ onLoad = () => {} }, ref) => {\r\n\r\n  // Font Reference\r\n  const font = \"./fonts/anek-bangla-v5-latin-500.woff\";\r\n\r\n  // State of properties\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n\r\n  // useEffect to let Experience know we exist and it can animate us in\r\n  useEffect(() => {\r\n    onLoad();\r\n  }, []);\r\n\r\n  // Scene reference\r\n  const scene = useRef();\r\n  const { camera } = useThree();\r\n\r\n  // Forwarding the ref\r\n  useImperativeHandle(ref, () => ({\r\n    // Used to tell whether the scene is hidden or not\r\n    scale: scene.current.scale,\r\n\r\n    // Toggle the animation\r\n    toggleAnimateOut: () => {\r\n      // stop animation from being called multiple times\r\n      if (!isAnimating) {\r\n        // Set the state to animating\r\n        setIsAnimating(true);\r\n\r\n        // Toggle visibility\r\n        scene.current.visible = true;\r\n\r\n        // Toggle scale\r\n        const targetScale =\r\n          scene.current.scale.x === 1\r\n            ? { x: 0, y: 0, z: 0 }\r\n            : { x: 1, y: 1, z: 1 };\r\n\r\n        // Animate the scale\r\n        gsap.to(scene.current.scale, {\r\n          duration: 0.5,\r\n          x: targetScale.x,\r\n          y: targetScale.y,\r\n          z: targetScale.z,\r\n          ease: \"power2.inOut\",\r\n          onUpdate: () => {\r\n            camera.updateProjectionMatrix();\r\n          },\r\n          // Hide the scene when the animation is complete\r\n          onComplete: () => {\r\n            if (targetScale.x === 0) {\r\n              scene.current.visible = false;\r\n            }\r\n            setIsAnimating(false);\r\n          },\r\n        });\r\n      }\r\n    },\r\n    // Toggle without the animation\r\n    toggleOut: () => {\r\n      // stop animation from being called multiple times\r\n      if (!isAnimating) {\r\n        // Set the state to animating\r\n        setIsAnimating(true);\r\n\r\n        // Toggle visibility\r\n        scene.current.visible = true;\r\n\r\n        // Toggle scale\r\n        if (scene.current.scale.x > 0) {\r\n          scene.current.scale.x = 0;\r\n          scene.current.scale.y = 0;\r\n          scene.current.scale.z = 0;\r\n\r\n          // If the scale is 0, hide the scene\r\n          scene.current.visible = false;\r\n        } else {\r\n          scene.current.scale.x = 1;\r\n          scene.current.scale.y = 1;\r\n          scene.current.scale.z = 1;\r\n        }\r\n\r\n        // Set the state to not animating\r\n        setIsAnimating(false);\r\n      }\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <group ref={scene} scale={0} visible={false}>\r\n    <Float rotationIntensity={0.4}>\r\n      \r\n      {/* Group to contain the laptop and Iframe */}\r\n      <group position-y={-1.2}>\r\n        {/* Laptop Model */}\r\n        <LaptopModel/>\r\n\r\n        /* My React Website */\r\n        <Html\r\n          transform\r\n          wrapperClass=\"htmlScreen\"\r\n          distanceFactor={1.14}\r\n          position={[0, 1.52, -1.35]}\r\n          rotation-x={-0.256}\r\n          occlude=\"blending\"\r\n        >\r\n          <iframe\r\n            src=\"https://eliparker.dev/react-site/\"\r\n          />\r\n        </Html>\r\n        </group>\r\n\r\n        {/* ELI PARKER Name Text */}\r\n      <Text\r\n        font={font}\r\n        fontSize={0.75}\r\n        position={[2.5, 0.5, -0.3]}\r\n        rotation-y={-1}\r\n        rotation-z={0.1}\r\n        maxWidth={2}\r\n        lineHeight={1}\r\n        color=\"#87ceeb\"\r\n      >\r\n        Eli Parker\r\n      </Text>\r\n\r\n      {/* Tooltip Text */}\r\n      <Text\r\n        font={font}\r\n        fontSize={0.125}\r\n        position={[-2, 0.75, -1.25]}\r\n        rotation={[-0, -0.1, 0]}\r\n        maxWidth={2}\r\n        lineHeight={1}\r\n        color=\"#87ceeb\"\r\n      >\r\n        {\"Scroll me! â†’\"}\r\n      </Text>\r\n\r\n      {/* Button to move closer to/away from the laptop */}\r\n      <ToggleFocusButton position={[0, 1.6, -1.8]} />\r\n\r\n      {/* Magic box display */}\r\n      {/* <MagicBox position={[2.8, 1.05, 0]} rotation={[-0.1, 1, 0]} /> */}\r\n    </Float>\r\n    </group>\r\n  );\r\n});\r\n\r\nexport default LaptopScene;\r\n\r\n\r\n/**\r\n * Renders the 3D model of a laptop using r3f's useGLTF hook.\r\n * \r\n * Auto-generated by: https://github.com/pmndrs/gltfjsx\r\n * @param {Object} props - The properties object to be passed to the group component which holds the model.\r\n * @returns {JSX.Element} The 3D model of the laptop.\r\n*/\r\nexport function LaptopModel(props) {\r\n  const group = useRef()\r\n  const { nodes, materials } = useGLTF('https://threejs-journey.com/resources/models/macbook_model.gltf')\r\n  return (\r\n    <group ref={group} {...props} dispose={null}>\r\n    <group position={[0, 0.52, 0,]} scale={[0.1, 0.1, 0.1,]} >\r\n\r\n      {/* Main laptop geometries */}\r\n      <mesh geometry={nodes.Circle001.geometry} material={nodes.Circle001.material} />\r\n      <mesh geometry={nodes.Circle001_1.geometry} material={nodes.Circle001_1.material} />\r\n      <mesh geometry={nodes.Circle001_2.geometry} material={materials.HeadPhoneHole} />\r\n      <mesh geometry={nodes.Circle001_3.geometry} material={nodes.Circle001_3.material} />\r\n      <mesh geometry={nodes.Circle001_4.geometry} material={nodes.Circle001_4.material} />\r\n      <mesh geometry={nodes.Circle001_5.geometry} material={materials.TouchbarBorder} />\r\n      <mesh geometry={nodes.Circle001_6.geometry} material={materials.Keyboard} />\r\n      <mesh geometry={nodes.FrontCameraRing001.geometry} material={materials['CameraRIngBlack.002']} position={[-0.15, 19.57, -16.15,]} scale={5.8} />\r\n      <mesh geometry={nodes.KeyboardKeyHole.geometry} material={nodes.KeyboardKeyHole.material} position={[-11.79, -0.15, -8.3,]} scale={5.8} />\r\n      <mesh geometry={nodes.RubberFoot.geometry} material={materials.DarkRubber} position={[-11.95, -0.75, 7.86,]} scale={5.8} />\r\n\r\n      {/* Hinge */}\r\n      <group position={[0.01, -0.21, -10.56,]} scale={5.8} >\r\n        <mesh geometry={nodes.Circle012.geometry} material={materials.HingeBlack} />\r\n        <mesh geometry={nodes.Circle012_1.geometry} material={materials.HingeMetal} />\r\n      </group>\r\n\r\n      {/* The bottom of the laptop? */}\r\n      <group position={[0, -0.51, 0,]} scale={5.8} >\r\n        <mesh geometry={nodes.Circle006.geometry} material={nodes.Circle006.material} />\r\n        <mesh geometry={nodes.Circle006_1.geometry} material={nodes.Circle006_1.material} />\r\n      </group>\r\n\r\n      {/* Keyboard geometries */}\r\n      <group position={[-11.79, -0.15, -8.3,]} scale={5.8} >\r\n        <mesh geometry={nodes.Circle.geometry} material={nodes.Circle.material} />\r\n        <mesh geometry={nodes.Circle_1.geometry} material={materials.Key} />\r\n        <mesh geometry={nodes.Circle_2.geometry} material={materials.Touchbar} />\r\n      </group>\r\n\r\n      {/* Screen section of laptop */}\r\n      <group position={[0.01, -0.47, -10.41,]} rotation={[1.31, 0, 0,]} scale={5.8} >\r\n        <mesh geometry={nodes.Circle002.geometry} material={nodes.Circle002.material} />\r\n        <mesh geometry={nodes.Circle002_1.geometry} material={materials.Screen} />\r\n        <mesh geometry={nodes.Circle002_2.geometry} material={materials.ScreenGlass} />\r\n\r\n        {/* Purpose of geometry unclear, commented for performance */}\r\n        {/* <mesh geometry={nodes.Circle002_3.geometry} material={materials.Rubber} /> */}\r\n        {/* <mesh geometry={nodes.Circle002_4.geometry} material={materials.DisplayGlass} /> */}\r\n        {/* <mesh geometry={nodes.AppleLogo000.geometry} material={materials['AppleLogo.004']} position={[0, -0.11, -1.8,]} rotation={[-Math.PI, 0, -Math.PI,]} scale={[0.58, 0.58, 0.58,]} /> */}\r\n      </group>\r\n\r\n      {/* I have no idea what this geometry is, but when I get rid of it it cuts the triangles for the scene in half.\r\n          Scaling it up reveals what looks like a sheet of screw textures that got left in the model. */}\r\n      {/* <group position={[-15.03, 0.03, 0.6,]} scale={5.8} >\r\n        <mesh geometry={nodes.Circle009.geometry} material={nodes.Circle009.material} />\r\n        <mesh geometry={nodes.Circle009_1.geometry} material={nodes.Circle009_1.material} />\r\n      </group> */}\r\n      \r\n      <group position={[12.2, 0.03, 0.6,]} scale={5.8} >\r\n        <mesh geometry={nodes.Circle003.geometry} material={nodes.Circle003.material} />\r\n        <mesh geometry={nodes.Circle003_1.geometry} material={nodes.Circle003_1.material} />\r\n      </group>\r\n    </group>\r\n\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload('https://threejs-journey.com/resources/models/macbook_model.gltf')"],"names":["LaptopScene","forwardRef","onLoad","ref","font","isAnimating","setIsAnimating","useState","useEffect","scene","useRef","camera","useThree","useImperativeHandle","targetScale","gsap","jsx","jsxs","Float","LaptopModel","Html","Text","ToggleFocusButton","props","group","nodes","materials","useGLTF"],"mappings":"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"}