{"version":3,"file":"ToggleFocusButton-CDP1Ac0r.js","sources":["../../../node_modules/@react-three/drei/core/Float.js","../../utils/ToggleFocusButton.jsx"],"sourcesContent":["import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nconst Float = /* @__PURE__ */React.forwardRef(({\n  children,\n  enabled = true,\n  speed = 1,\n  rotationIntensity = 1,\n  floatIntensity = 1,\n  floatingRange = [-0.1, 0.1],\n  autoInvalidate = false,\n  ...props\n}, forwardRef) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, () => ref.current, []);\n  const offset = React.useRef(Math.random() * 10000);\n  useFrame(state => {\n    var _floatingRange$, _floatingRange$2;\n    if (!enabled || speed === 0) return;\n    if (autoInvalidate) state.invalidate();\n    const t = offset.current + state.clock.getElapsedTime();\n    ref.current.rotation.x = Math.cos(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.y = Math.sin(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.z = Math.sin(t / 4 * speed) / 20 * rotationIntensity;\n    let yPosition = Math.sin(t / 4 * speed) / 10;\n    yPosition = THREE.MathUtils.mapLinear(yPosition, -0.1, 0.1, (_floatingRange$ = floatingRange == null ? void 0 : floatingRange[0]) !== null && _floatingRange$ !== void 0 ? _floatingRange$ : -0.1, (_floatingRange$2 = floatingRange == null ? void 0 : floatingRange[1]) !== null && _floatingRange$2 !== void 0 ? _floatingRange$2 : 0.1);\n    ref.current.position.y = yPosition * floatIntensity;\n    ref.current.updateMatrix();\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrixAutoUpdate: false\n  }, children));\n});\n\nexport { Float };\n","import React, { useState } from 'react';\r\nimport { useFrame, useThree } from \"@react-three/fiber\";\r\nimport * as THREE from 'three';\r\nimport gsap from 'gsap';\r\nimport { Text } from '@react-three/drei';\r\n\r\n/**\r\n * Generates a button that allows the user to toggle between two views\r\n * @param {string} page - the page this button is on (used to determine the camera position)\r\n */\r\nexport default function ToggleFocusButton({page, ...props })\r\n{\r\n    // Get camera object\r\n    const { camera } = useThree();\r\n\r\n    // Store initial positions and rotations\r\n    const [initialPosition] = useState(() => camera.position.clone());\r\n    const [initialRotation] = useState(() => camera.rotation.clone());\r\n\r\n    // State for focus, to tell when the camera is zoomed in\r\n    const [focus, setFocus] = useState(false);\r\n\r\n    // Get the button object for animation\r\n    const Button = React.useRef();\r\n\r\n    // Initialize the isAnimating property\r\n    const [isAnimating, setIsAnimating] = React.useState(false);\r\n\r\n    // Rotate the button\r\n    useFrame(({ clock }) => {\r\n        const a = clock.getElapsedTime();\r\n        Button.current.rotation.x = a;\r\n        Button.current.rotation.y = a;\r\n      });\r\n\r\n    /**\r\n     * Function to move the camera closer to/away from the laptop\r\n     */\r\n    function ToggleMoveLaptop() \r\n    {\r\n        // Prevent multiple calls until animation finishes\r\n        if (isAnimating)  return;\r\n\r\n        setIsAnimating(true);\r\n        \r\n        // Define the target positions and rotations\r\n        const focusPosition = page === \"projects\" ? new THREE.Vector3(0, 1, 3) : new THREE.Vector3(0, 1, 2);\r\n        const focusRotation = page === \"projects\" ? new THREE.Euler(-0.1, 0, 0.0) : new THREE.Euler(-0.1, 0.05, 0); \r\n        \r\n        // Determine which position and rotation to move to based on whether were focused\r\n        const targetPosition = focus ? initialPosition : focusPosition;\r\n        const targetRotation = focus ? initialRotation : focusRotation;\r\n        \r\n        // Use GSAP to animate the camera position\r\n        gsap.to(camera.position, {\r\n            duration: 1,\r\n            x: targetPosition.x,\r\n            y: targetPosition.y,\r\n            z: targetPosition.z,\r\n            ease: \"power2.inOut\",\r\n            onUpdate: () => {\r\n                camera.updateProjectionMatrix();\r\n            },\r\n            onComplete: () => {\r\n                setIsAnimating(false);\r\n            }\r\n        });\r\n        \r\n        gsap.to(camera.rotation, {\r\n            duration: 1,\r\n            x: targetRotation.x,\r\n            y: targetRotation.y,\r\n            z: targetRotation.z,\r\n            ease: \"power2.inOut\",\r\n            onUpdate: () => {\r\n                camera.updateProjectionMatrix();\r\n            },\r\n            onComplete: () => {\r\n                setIsAnimating(false);\r\n            }\r\n        });\r\n\r\n        setFocus(!focus);\r\n    }\r\n    \r\n    // Return value\r\n    return (\r\n        <group {...props}>\r\n            <mesh\r\n                ref={Button}\r\n                onClick={() => {\r\n                    // Logic to move closer to/away from the laptop\r\n                    ToggleMoveLaptop();\r\n                }}\r\n            >\r\n                <icosahedronGeometry args={ [0.2, 0] }/>\r\n                <meshNormalMaterial />\r\n            </mesh>\r\n            {/* Text */}\r\n            <Text\r\n                font=\"./fonts/anek-bangla-v5-latin-500.woff\"\r\n                fontSize={0.1}\r\n                position={[0, 0.25, 0]}\r\n                maxWidth={2}\r\n                lineHeight={1}\r\n                color=\"#87ceeb\"\r\n            >\r\n               ⌄ Click to Focus ⌄\r\n            </Text>\r\n        </group>\r\n    );\r\n}"],"names":["Float","React.forwardRef","children","enabled","speed","rotationIntensity","floatIntensity","floatingRange","autoInvalidate","props","forwardRef","ref","React.useRef","React.useImperativeHandle","offset","useFrame","state","_floatingRange$","_floatingRange$2","t","yPosition","THREE.MathUtils","React.createElement","ToggleFocusButton","page","camera","useThree","initialPosition","useState","initialRotation","focus","setFocus","Button","React","isAnimating","setIsAnimating","clock","ToggleMoveLaptop","focusPosition","THREE.Vector3","focusRotation","THREE.Euler","targetPosition","targetRotation","gsap","jsxs","jsx","Text"],"mappings":"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","x_google_ignoreList":[0]}